name: CI

on:
  push:
  pull_request:

jobs:
  backend:
    name: backend
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: inventory
          POSTGRES_PASSWORD: inventory
          POSTGRES_DB: inventory
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U inventory -d inventory"
          --health-interval=5s --health-timeout=5s --health-retries=20

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Fallbacks voor lint/pytest als requirements ontbreken:
          pip install black isort flake8 mypy pytest psycopg[binary] || true

      - name: Lint & typecheck
        run: |
          if [ -d app ]; then black --check app && isort --check-only app && flake8 app && mypy app; else echo "no app/ dir, skipping lint"; fi

      - name: Tests
        env:
          DATABASE_URL: postgresql+psycopg://inventory:inventory@localhost:5432/inventory
        run: |
          if ls tests 1>/dev/null 2>&1; then pytest -q; else echo "no tests/, running smoke"; python - <<'PY'
from http.server import SimpleHTTPRequestHandler, HTTPServer
print("smoke ok")
PY
          fi

  frontend:
    name: frontend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install
        run: |
          if [ -f package-lock.json ]; then npm ci; elif [ -f package.json ]; then npm install; else echo "no package.json, skipping install"; fi

      - name: Lint
        run: |
          if [ -f package.json ]; then npx eslint . --max-warnings=0 || true; else echo "no package.json, skipping"; fi

      - name: Typecheck
        run: |
          if [ -f tsconfig.json ]; then npx tsc --noEmit; else echo "no tsconfig.json, skipping"; fi

